// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// npx prisma migrate dev --name "init"

// #region User
model User {
  id                     String     @id @default(uuid())
  email                  String     @unique
  phone                  Int?       @unique
  username               String     @unique
  fullName               String?
  birthDate              String?
  work                   String?
  password               String
  address                String?
  avatar                 String?
  refreshToken           String?
  refreshTokenExpiration DateTime?
  createdAt              DateTime   @default(now())
  updatedAt              DateTime   @updatedAt
  favoritedMeals         UserMeal[]
  createdMeals           Meal[]     @relation("UserCreatedMeals") // Quan hệ mới cho meals được tạo
}

// #region Intermediry User
model UserMeal {
  userId    String
  mealId    String
  user      User     @relation(fields: [userId], references: [id])
  meal      Meal     @relation(fields: [mealId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([userId, mealId])
}

// #region Meal
model Meal {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cuisine   Cuisine @relation(fields: [cuisineId], references: [id])
  cuisineId String

  recipe   Recipe @relation(fields: [recipeId], references: [id])
  recipeId String

  createdBy   User   @relation("UserCreatedMeals", fields: [createdById], references: [id])
  createdById String

  preferredBy UserMeal[]
}

// #region Intermediary Recipe
model RecipeIngredient {
  recipeId     String
  ingredientId String
  recipe       Recipe     @relation(fields: [recipeId], references: [id])
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  @@id([recipeId, ingredientId]) // Đảm bảo mỗi cặp recipeId và ingredientId là duy nhất
}

// #region Ingredient
model Ingredient {
  id            String             @id @default(uuid())
  name          String
  image         String
  protein       Int
  fat           Int
  carbohydrates Int
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
  recipes       RecipeIngredient[] // Quan hệ nhiều-nhiều với Recipe thông qua bảng trung gian RecipeIngredient
}

// #region Recipe
model Recipe {
  id          String             @id @default(uuid())
  description String
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
  ingredients RecipeIngredient[] // Quan hệ nhiều-nhiều với Ingredient thông qua bảng trung gian RecipeIngredient
  meals       Meal[]

  nutritionalValue   NutritionalValue @relation(fields: [nutritionalValueId], references: [id])
  nutritionalValueId String           @unique
}

model NutritionalValue {
  id            String  @id @default(uuid())
  protein       Float
  fat           Float
  carbohydrates Float
  kcal          Int
  recipe        Recipe?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// #region Cuisine
model Cuisine {
  id          String   @id @default(uuid())
  name        String   @unique
  icon        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  meals       Meal[]
}

// #region Todo
model Todo {
  id        String   @id @default(uuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
