import { PrismaService } from 'src/shareds';
export declare const prismator: (model: PrismaService) => import("@prisma/client/runtime/library").DynamicClientExtensionThis<import("@prisma/client").Prisma.TypeMap<import("@prisma/client/runtime/library").InternalArgs & {
    result: {};
    model: {
        $allModels: {
            aggregate: () => <T, A>(this: T, args: import("@prisma/client/runtime/library").Exact<A, import("@prisma/client/runtime/library").Args_3<T, "aggregate"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T, A, "aggregate">>;
            count: () => <T_1, A_1>(this: T_1, args?: import("@prisma/client/runtime/library").Exact<A_1, import("@prisma/client/runtime/library").Args_3<T_1, "count"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_1, A_1, "count">>;
            findFirst: () => <T_2, A_2>(this: T_2, args?: import("@prisma/client/runtime/library").Exact<A_2, import("@prisma/client/runtime/library").Args_3<T_2, "findFirst"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_2, A_2, "findFirst"> | null>;
            findFirstOrThrow: () => <T_3, A_3>(this: T_3, args?: import("@prisma/client/runtime/library").Exact<A_3, import("@prisma/client/runtime/library").Args_3<T_3, "findFirstOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_3, A_3, "findFirstOrThrow">>;
            findMany: () => <T_4, A_4>(this: T_4, args?: import("@prisma/client/runtime/library").Exact<A_4, import("@prisma/client/runtime/library").Args_3<T_4, "findMany"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_4, A_4, "findMany">>;
            findUnique: () => <T_5, A_5>(this: T_5, args: import("@prisma/client/runtime/library").Exact<A_5, import("@prisma/client/runtime/library").Args_3<T_5, "findUnique"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_5, A_5, "findUnique"> | null>;
            findUniqueOrThrow: () => <T_6, A_6>(this: T_6, args: import("@prisma/client/runtime/library").Exact<A_6, import("@prisma/client/runtime/library").Args_3<T_6, "findUniqueOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_6, A_6, "findUniqueOrThrow">>;
            groupBy: () => <T_7, A_7>(this: T_7, args: import("@prisma/client/runtime/library").Exact<A_7, import("@prisma/client/runtime/library").Args_3<T_7, "groupBy"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_7, A_7, "groupBy">>;
        };
        user: {
            aggregate: () => <T, A>(this: T, args: import("@prisma/client/runtime/library").Exact<A, import("@prisma/client/runtime/library").Args_3<T, "aggregate"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T, A, "aggregate">>;
            count: () => <T_1, A_1>(this: T_1, args?: import("@prisma/client/runtime/library").Exact<A_1, import("@prisma/client/runtime/library").Args_3<T_1, "count"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_1, A_1, "count">>;
            findFirst: () => <T_2, A_2>(this: T_2, args?: import("@prisma/client/runtime/library").Exact<A_2, import("@prisma/client/runtime/library").Args_3<T_2, "findFirst"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_2, A_2, "findFirst"> | null>;
            findFirstOrThrow: () => <T_3, A_3>(this: T_3, args?: import("@prisma/client/runtime/library").Exact<A_3, import("@prisma/client/runtime/library").Args_3<T_3, "findFirstOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_3, A_3, "findFirstOrThrow">>;
            findMany: () => <T_4, A_4>(this: T_4, args?: import("@prisma/client/runtime/library").Exact<A_4, import("@prisma/client/runtime/library").Args_3<T_4, "findMany"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_4, A_4, "findMany">>;
            findUnique: () => <T_5, A_5>(this: T_5, args: import("@prisma/client/runtime/library").Exact<A_5, import("@prisma/client/runtime/library").Args_3<T_5, "findUnique"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_5, A_5, "findUnique"> | null>;
            findUniqueOrThrow: () => <T_6, A_6>(this: T_6, args: import("@prisma/client/runtime/library").Exact<A_6, import("@prisma/client/runtime/library").Args_3<T_6, "findUniqueOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_6, A_6, "findUniqueOrThrow">>;
            groupBy: () => <T_7, A_7>(this: T_7, args: import("@prisma/client/runtime/library").Exact<A_7, import("@prisma/client/runtime/library").Args_3<T_7, "groupBy"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_7, A_7, "groupBy">>;
        };
        userMeal: {
            aggregate: () => <T, A>(this: T, args: import("@prisma/client/runtime/library").Exact<A, import("@prisma/client/runtime/library").Args_3<T, "aggregate"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T, A, "aggregate">>;
            count: () => <T_1, A_1>(this: T_1, args?: import("@prisma/client/runtime/library").Exact<A_1, import("@prisma/client/runtime/library").Args_3<T_1, "count"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_1, A_1, "count">>;
            findFirst: () => <T_2, A_2>(this: T_2, args?: import("@prisma/client/runtime/library").Exact<A_2, import("@prisma/client/runtime/library").Args_3<T_2, "findFirst"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_2, A_2, "findFirst"> | null>;
            findFirstOrThrow: () => <T_3, A_3>(this: T_3, args?: import("@prisma/client/runtime/library").Exact<A_3, import("@prisma/client/runtime/library").Args_3<T_3, "findFirstOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_3, A_3, "findFirstOrThrow">>;
            findMany: () => <T_4, A_4>(this: T_4, args?: import("@prisma/client/runtime/library").Exact<A_4, import("@prisma/client/runtime/library").Args_3<T_4, "findMany"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_4, A_4, "findMany">>;
            findUnique: () => <T_5, A_5>(this: T_5, args: import("@prisma/client/runtime/library").Exact<A_5, import("@prisma/client/runtime/library").Args_3<T_5, "findUnique"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_5, A_5, "findUnique"> | null>;
            findUniqueOrThrow: () => <T_6, A_6>(this: T_6, args: import("@prisma/client/runtime/library").Exact<A_6, import("@prisma/client/runtime/library").Args_3<T_6, "findUniqueOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_6, A_6, "findUniqueOrThrow">>;
            groupBy: () => <T_7, A_7>(this: T_7, args: import("@prisma/client/runtime/library").Exact<A_7, import("@prisma/client/runtime/library").Args_3<T_7, "groupBy"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_7, A_7, "groupBy">>;
        };
        meal: {
            aggregate: () => <T, A>(this: T, args: import("@prisma/client/runtime/library").Exact<A, import("@prisma/client/runtime/library").Args_3<T, "aggregate"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T, A, "aggregate">>;
            count: () => <T_1, A_1>(this: T_1, args?: import("@prisma/client/runtime/library").Exact<A_1, import("@prisma/client/runtime/library").Args_3<T_1, "count"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_1, A_1, "count">>;
            findFirst: () => <T_2, A_2>(this: T_2, args?: import("@prisma/client/runtime/library").Exact<A_2, import("@prisma/client/runtime/library").Args_3<T_2, "findFirst"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_2, A_2, "findFirst"> | null>;
            findFirstOrThrow: () => <T_3, A_3>(this: T_3, args?: import("@prisma/client/runtime/library").Exact<A_3, import("@prisma/client/runtime/library").Args_3<T_3, "findFirstOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_3, A_3, "findFirstOrThrow">>;
            findMany: () => <T_4, A_4>(this: T_4, args?: import("@prisma/client/runtime/library").Exact<A_4, import("@prisma/client/runtime/library").Args_3<T_4, "findMany"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_4, A_4, "findMany">>;
            findUnique: () => <T_5, A_5>(this: T_5, args: import("@prisma/client/runtime/library").Exact<A_5, import("@prisma/client/runtime/library").Args_3<T_5, "findUnique"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_5, A_5, "findUnique"> | null>;
            findUniqueOrThrow: () => <T_6, A_6>(this: T_6, args: import("@prisma/client/runtime/library").Exact<A_6, import("@prisma/client/runtime/library").Args_3<T_6, "findUniqueOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_6, A_6, "findUniqueOrThrow">>;
            groupBy: () => <T_7, A_7>(this: T_7, args: import("@prisma/client/runtime/library").Exact<A_7, import("@prisma/client/runtime/library").Args_3<T_7, "groupBy"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_7, A_7, "groupBy">>;
        };
        recipeIngredient: {
            aggregate: () => <T, A>(this: T, args: import("@prisma/client/runtime/library").Exact<A, import("@prisma/client/runtime/library").Args_3<T, "aggregate"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T, A, "aggregate">>;
            count: () => <T_1, A_1>(this: T_1, args?: import("@prisma/client/runtime/library").Exact<A_1, import("@prisma/client/runtime/library").Args_3<T_1, "count"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_1, A_1, "count">>;
            findFirst: () => <T_2, A_2>(this: T_2, args?: import("@prisma/client/runtime/library").Exact<A_2, import("@prisma/client/runtime/library").Args_3<T_2, "findFirst"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_2, A_2, "findFirst"> | null>;
            findFirstOrThrow: () => <T_3, A_3>(this: T_3, args?: import("@prisma/client/runtime/library").Exact<A_3, import("@prisma/client/runtime/library").Args_3<T_3, "findFirstOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_3, A_3, "findFirstOrThrow">>;
            findMany: () => <T_4, A_4>(this: T_4, args?: import("@prisma/client/runtime/library").Exact<A_4, import("@prisma/client/runtime/library").Args_3<T_4, "findMany"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_4, A_4, "findMany">>;
            findUnique: () => <T_5, A_5>(this: T_5, args: import("@prisma/client/runtime/library").Exact<A_5, import("@prisma/client/runtime/library").Args_3<T_5, "findUnique"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_5, A_5, "findUnique"> | null>;
            findUniqueOrThrow: () => <T_6, A_6>(this: T_6, args: import("@prisma/client/runtime/library").Exact<A_6, import("@prisma/client/runtime/library").Args_3<T_6, "findUniqueOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_6, A_6, "findUniqueOrThrow">>;
            groupBy: () => <T_7, A_7>(this: T_7, args: import("@prisma/client/runtime/library").Exact<A_7, import("@prisma/client/runtime/library").Args_3<T_7, "groupBy"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_7, A_7, "groupBy">>;
        };
        ingredient: {
            aggregate: () => <T, A>(this: T, args: import("@prisma/client/runtime/library").Exact<A, import("@prisma/client/runtime/library").Args_3<T, "aggregate"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T, A, "aggregate">>;
            count: () => <T_1, A_1>(this: T_1, args?: import("@prisma/client/runtime/library").Exact<A_1, import("@prisma/client/runtime/library").Args_3<T_1, "count"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_1, A_1, "count">>;
            findFirst: () => <T_2, A_2>(this: T_2, args?: import("@prisma/client/runtime/library").Exact<A_2, import("@prisma/client/runtime/library").Args_3<T_2, "findFirst"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_2, A_2, "findFirst"> | null>;
            findFirstOrThrow: () => <T_3, A_3>(this: T_3, args?: import("@prisma/client/runtime/library").Exact<A_3, import("@prisma/client/runtime/library").Args_3<T_3, "findFirstOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_3, A_3, "findFirstOrThrow">>;
            findMany: () => <T_4, A_4>(this: T_4, args?: import("@prisma/client/runtime/library").Exact<A_4, import("@prisma/client/runtime/library").Args_3<T_4, "findMany"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_4, A_4, "findMany">>;
            findUnique: () => <T_5, A_5>(this: T_5, args: import("@prisma/client/runtime/library").Exact<A_5, import("@prisma/client/runtime/library").Args_3<T_5, "findUnique"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_5, A_5, "findUnique"> | null>;
            findUniqueOrThrow: () => <T_6, A_6>(this: T_6, args: import("@prisma/client/runtime/library").Exact<A_6, import("@prisma/client/runtime/library").Args_3<T_6, "findUniqueOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_6, A_6, "findUniqueOrThrow">>;
            groupBy: () => <T_7, A_7>(this: T_7, args: import("@prisma/client/runtime/library").Exact<A_7, import("@prisma/client/runtime/library").Args_3<T_7, "groupBy"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_7, A_7, "groupBy">>;
        };
        recipe: {
            aggregate: () => <T, A>(this: T, args: import("@prisma/client/runtime/library").Exact<A, import("@prisma/client/runtime/library").Args_3<T, "aggregate"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T, A, "aggregate">>;
            count: () => <T_1, A_1>(this: T_1, args?: import("@prisma/client/runtime/library").Exact<A_1, import("@prisma/client/runtime/library").Args_3<T_1, "count"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_1, A_1, "count">>;
            findFirst: () => <T_2, A_2>(this: T_2, args?: import("@prisma/client/runtime/library").Exact<A_2, import("@prisma/client/runtime/library").Args_3<T_2, "findFirst"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_2, A_2, "findFirst"> | null>;
            findFirstOrThrow: () => <T_3, A_3>(this: T_3, args?: import("@prisma/client/runtime/library").Exact<A_3, import("@prisma/client/runtime/library").Args_3<T_3, "findFirstOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_3, A_3, "findFirstOrThrow">>;
            findMany: () => <T_4, A_4>(this: T_4, args?: import("@prisma/client/runtime/library").Exact<A_4, import("@prisma/client/runtime/library").Args_3<T_4, "findMany"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_4, A_4, "findMany">>;
            findUnique: () => <T_5, A_5>(this: T_5, args: import("@prisma/client/runtime/library").Exact<A_5, import("@prisma/client/runtime/library").Args_3<T_5, "findUnique"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_5, A_5, "findUnique"> | null>;
            findUniqueOrThrow: () => <T_6, A_6>(this: T_6, args: import("@prisma/client/runtime/library").Exact<A_6, import("@prisma/client/runtime/library").Args_3<T_6, "findUniqueOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_6, A_6, "findUniqueOrThrow">>;
            groupBy: () => <T_7, A_7>(this: T_7, args: import("@prisma/client/runtime/library").Exact<A_7, import("@prisma/client/runtime/library").Args_3<T_7, "groupBy"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_7, A_7, "groupBy">>;
        };
        nutritionalValue: {
            aggregate: () => <T, A>(this: T, args: import("@prisma/client/runtime/library").Exact<A, import("@prisma/client/runtime/library").Args_3<T, "aggregate"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T, A, "aggregate">>;
            count: () => <T_1, A_1>(this: T_1, args?: import("@prisma/client/runtime/library").Exact<A_1, import("@prisma/client/runtime/library").Args_3<T_1, "count"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_1, A_1, "count">>;
            findFirst: () => <T_2, A_2>(this: T_2, args?: import("@prisma/client/runtime/library").Exact<A_2, import("@prisma/client/runtime/library").Args_3<T_2, "findFirst"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_2, A_2, "findFirst"> | null>;
            findFirstOrThrow: () => <T_3, A_3>(this: T_3, args?: import("@prisma/client/runtime/library").Exact<A_3, import("@prisma/client/runtime/library").Args_3<T_3, "findFirstOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_3, A_3, "findFirstOrThrow">>;
            findMany: () => <T_4, A_4>(this: T_4, args?: import("@prisma/client/runtime/library").Exact<A_4, import("@prisma/client/runtime/library").Args_3<T_4, "findMany"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_4, A_4, "findMany">>;
            findUnique: () => <T_5, A_5>(this: T_5, args: import("@prisma/client/runtime/library").Exact<A_5, import("@prisma/client/runtime/library").Args_3<T_5, "findUnique"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_5, A_5, "findUnique"> | null>;
            findUniqueOrThrow: () => <T_6, A_6>(this: T_6, args: import("@prisma/client/runtime/library").Exact<A_6, import("@prisma/client/runtime/library").Args_3<T_6, "findUniqueOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_6, A_6, "findUniqueOrThrow">>;
            groupBy: () => <T_7, A_7>(this: T_7, args: import("@prisma/client/runtime/library").Exact<A_7, import("@prisma/client/runtime/library").Args_3<T_7, "groupBy"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_7, A_7, "groupBy">>;
        };
        cuisine: {
            aggregate: () => <T, A>(this: T, args: import("@prisma/client/runtime/library").Exact<A, import("@prisma/client/runtime/library").Args_3<T, "aggregate"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T, A, "aggregate">>;
            count: () => <T_1, A_1>(this: T_1, args?: import("@prisma/client/runtime/library").Exact<A_1, import("@prisma/client/runtime/library").Args_3<T_1, "count"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_1, A_1, "count">>;
            findFirst: () => <T_2, A_2>(this: T_2, args?: import("@prisma/client/runtime/library").Exact<A_2, import("@prisma/client/runtime/library").Args_3<T_2, "findFirst"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_2, A_2, "findFirst"> | null>;
            findFirstOrThrow: () => <T_3, A_3>(this: T_3, args?: import("@prisma/client/runtime/library").Exact<A_3, import("@prisma/client/runtime/library").Args_3<T_3, "findFirstOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_3, A_3, "findFirstOrThrow">>;
            findMany: () => <T_4, A_4>(this: T_4, args?: import("@prisma/client/runtime/library").Exact<A_4, import("@prisma/client/runtime/library").Args_3<T_4, "findMany"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_4, A_4, "findMany">>;
            findUnique: () => <T_5, A_5>(this: T_5, args: import("@prisma/client/runtime/library").Exact<A_5, import("@prisma/client/runtime/library").Args_3<T_5, "findUnique"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_5, A_5, "findUnique"> | null>;
            findUniqueOrThrow: () => <T_6, A_6>(this: T_6, args: import("@prisma/client/runtime/library").Exact<A_6, import("@prisma/client/runtime/library").Args_3<T_6, "findUniqueOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_6, A_6, "findUniqueOrThrow">>;
            groupBy: () => <T_7, A_7>(this: T_7, args: import("@prisma/client/runtime/library").Exact<A_7, import("@prisma/client/runtime/library").Args_3<T_7, "groupBy"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_7, A_7, "groupBy">>;
        };
        todo: {
            aggregate: () => <T, A>(this: T, args: import("@prisma/client/runtime/library").Exact<A, import("@prisma/client/runtime/library").Args_3<T, "aggregate"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T, A, "aggregate">>;
            count: () => <T_1, A_1>(this: T_1, args?: import("@prisma/client/runtime/library").Exact<A_1, import("@prisma/client/runtime/library").Args_3<T_1, "count"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_1, A_1, "count">>;
            findFirst: () => <T_2, A_2>(this: T_2, args?: import("@prisma/client/runtime/library").Exact<A_2, import("@prisma/client/runtime/library").Args_3<T_2, "findFirst"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_2, A_2, "findFirst"> | null>;
            findFirstOrThrow: () => <T_3, A_3>(this: T_3, args?: import("@prisma/client/runtime/library").Exact<A_3, import("@prisma/client/runtime/library").Args_3<T_3, "findFirstOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_3, A_3, "findFirstOrThrow">>;
            findMany: () => <T_4, A_4>(this: T_4, args?: import("@prisma/client/runtime/library").Exact<A_4, import("@prisma/client/runtime/library").Args_3<T_4, "findMany"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_4, A_4, "findMany">>;
            findUnique: () => <T_5, A_5>(this: T_5, args: import("@prisma/client/runtime/library").Exact<A_5, import("@prisma/client/runtime/library").Args_3<T_5, "findUnique"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_5, A_5, "findUnique"> | null>;
            findUniqueOrThrow: () => <T_6, A_6>(this: T_6, args: import("@prisma/client/runtime/library").Exact<A_6, import("@prisma/client/runtime/library").Args_3<T_6, "findUniqueOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_6, A_6, "findUniqueOrThrow">>;
            groupBy: () => <T_7, A_7>(this: T_7, args: import("@prisma/client/runtime/library").Exact<A_7, import("@prisma/client/runtime/library").Args_3<T_7, "groupBy"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_7, A_7, "groupBy">>;
        };
        blog: {
            aggregate: () => <T, A>(this: T, args: import("@prisma/client/runtime/library").Exact<A, import("@prisma/client/runtime/library").Args_3<T, "aggregate"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T, A, "aggregate">>;
            count: () => <T_1, A_1>(this: T_1, args?: import("@prisma/client/runtime/library").Exact<A_1, import("@prisma/client/runtime/library").Args_3<T_1, "count"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_1, A_1, "count">>;
            findFirst: () => <T_2, A_2>(this: T_2, args?: import("@prisma/client/runtime/library").Exact<A_2, import("@prisma/client/runtime/library").Args_3<T_2, "findFirst"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_2, A_2, "findFirst"> | null>;
            findFirstOrThrow: () => <T_3, A_3>(this: T_3, args?: import("@prisma/client/runtime/library").Exact<A_3, import("@prisma/client/runtime/library").Args_3<T_3, "findFirstOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_3, A_3, "findFirstOrThrow">>;
            findMany: () => <T_4, A_4>(this: T_4, args?: import("@prisma/client/runtime/library").Exact<A_4, import("@prisma/client/runtime/library").Args_3<T_4, "findMany"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_4, A_4, "findMany">>;
            findUnique: () => <T_5, A_5>(this: T_5, args: import("@prisma/client/runtime/library").Exact<A_5, import("@prisma/client/runtime/library").Args_3<T_5, "findUnique"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_5, A_5, "findUnique"> | null>;
            findUniqueOrThrow: () => <T_6, A_6>(this: T_6, args: import("@prisma/client/runtime/library").Exact<A_6, import("@prisma/client/runtime/library").Args_3<T_6, "findUniqueOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_6, A_6, "findUniqueOrThrow">>;
            groupBy: () => <T_7, A_7>(this: T_7, args: import("@prisma/client/runtime/library").Exact<A_7, import("@prisma/client/runtime/library").Args_3<T_7, "groupBy"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_7, A_7, "groupBy">>;
        };
    };
    query: {};
    client: {};
}, import("@prisma/client").Prisma.PrismaClientOptions>, import("@prisma/client").Prisma.TypeMapCb, {
    result: {};
    model: {
        $allModels: {
            aggregate: () => <T, A>(this: T, args: import("@prisma/client/runtime/library").Exact<A, import("@prisma/client/runtime/library").Args_3<T, "aggregate"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T, A, "aggregate">>;
            count: () => <T_1, A_1>(this: T_1, args?: import("@prisma/client/runtime/library").Exact<A_1, import("@prisma/client/runtime/library").Args_3<T_1, "count"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_1, A_1, "count">>;
            findFirst: () => <T_2, A_2>(this: T_2, args?: import("@prisma/client/runtime/library").Exact<A_2, import("@prisma/client/runtime/library").Args_3<T_2, "findFirst"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_2, A_2, "findFirst"> | null>;
            findFirstOrThrow: () => <T_3, A_3>(this: T_3, args?: import("@prisma/client/runtime/library").Exact<A_3, import("@prisma/client/runtime/library").Args_3<T_3, "findFirstOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_3, A_3, "findFirstOrThrow">>;
            findMany: () => <T_4, A_4>(this: T_4, args?: import("@prisma/client/runtime/library").Exact<A_4, import("@prisma/client/runtime/library").Args_3<T_4, "findMany"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_4, A_4, "findMany">>;
            findUnique: () => <T_5, A_5>(this: T_5, args: import("@prisma/client/runtime/library").Exact<A_5, import("@prisma/client/runtime/library").Args_3<T_5, "findUnique"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_5, A_5, "findUnique"> | null>;
            findUniqueOrThrow: () => <T_6, A_6>(this: T_6, args: import("@prisma/client/runtime/library").Exact<A_6, import("@prisma/client/runtime/library").Args_3<T_6, "findUniqueOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_6, A_6, "findUniqueOrThrow">>;
            groupBy: () => <T_7, A_7>(this: T_7, args: import("@prisma/client/runtime/library").Exact<A_7, import("@prisma/client/runtime/library").Args_3<T_7, "groupBy"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_7, A_7, "groupBy">>;
        };
        user: {
            aggregate: () => <T, A>(this: T, args: import("@prisma/client/runtime/library").Exact<A, import("@prisma/client/runtime/library").Args_3<T, "aggregate"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T, A, "aggregate">>;
            count: () => <T_1, A_1>(this: T_1, args?: import("@prisma/client/runtime/library").Exact<A_1, import("@prisma/client/runtime/library").Args_3<T_1, "count"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_1, A_1, "count">>;
            findFirst: () => <T_2, A_2>(this: T_2, args?: import("@prisma/client/runtime/library").Exact<A_2, import("@prisma/client/runtime/library").Args_3<T_2, "findFirst"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_2, A_2, "findFirst"> | null>;
            findFirstOrThrow: () => <T_3, A_3>(this: T_3, args?: import("@prisma/client/runtime/library").Exact<A_3, import("@prisma/client/runtime/library").Args_3<T_3, "findFirstOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_3, A_3, "findFirstOrThrow">>;
            findMany: () => <T_4, A_4>(this: T_4, args?: import("@prisma/client/runtime/library").Exact<A_4, import("@prisma/client/runtime/library").Args_3<T_4, "findMany"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_4, A_4, "findMany">>;
            findUnique: () => <T_5, A_5>(this: T_5, args: import("@prisma/client/runtime/library").Exact<A_5, import("@prisma/client/runtime/library").Args_3<T_5, "findUnique"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_5, A_5, "findUnique"> | null>;
            findUniqueOrThrow: () => <T_6, A_6>(this: T_6, args: import("@prisma/client/runtime/library").Exact<A_6, import("@prisma/client/runtime/library").Args_3<T_6, "findUniqueOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_6, A_6, "findUniqueOrThrow">>;
            groupBy: () => <T_7, A_7>(this: T_7, args: import("@prisma/client/runtime/library").Exact<A_7, import("@prisma/client/runtime/library").Args_3<T_7, "groupBy"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_7, A_7, "groupBy">>;
        };
        userMeal: {
            aggregate: () => <T, A>(this: T, args: import("@prisma/client/runtime/library").Exact<A, import("@prisma/client/runtime/library").Args_3<T, "aggregate"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T, A, "aggregate">>;
            count: () => <T_1, A_1>(this: T_1, args?: import("@prisma/client/runtime/library").Exact<A_1, import("@prisma/client/runtime/library").Args_3<T_1, "count"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_1, A_1, "count">>;
            findFirst: () => <T_2, A_2>(this: T_2, args?: import("@prisma/client/runtime/library").Exact<A_2, import("@prisma/client/runtime/library").Args_3<T_2, "findFirst"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_2, A_2, "findFirst"> | null>;
            findFirstOrThrow: () => <T_3, A_3>(this: T_3, args?: import("@prisma/client/runtime/library").Exact<A_3, import("@prisma/client/runtime/library").Args_3<T_3, "findFirstOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_3, A_3, "findFirstOrThrow">>;
            findMany: () => <T_4, A_4>(this: T_4, args?: import("@prisma/client/runtime/library").Exact<A_4, import("@prisma/client/runtime/library").Args_3<T_4, "findMany"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_4, A_4, "findMany">>;
            findUnique: () => <T_5, A_5>(this: T_5, args: import("@prisma/client/runtime/library").Exact<A_5, import("@prisma/client/runtime/library").Args_3<T_5, "findUnique"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_5, A_5, "findUnique"> | null>;
            findUniqueOrThrow: () => <T_6, A_6>(this: T_6, args: import("@prisma/client/runtime/library").Exact<A_6, import("@prisma/client/runtime/library").Args_3<T_6, "findUniqueOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_6, A_6, "findUniqueOrThrow">>;
            groupBy: () => <T_7, A_7>(this: T_7, args: import("@prisma/client/runtime/library").Exact<A_7, import("@prisma/client/runtime/library").Args_3<T_7, "groupBy"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_7, A_7, "groupBy">>;
        };
        meal: {
            aggregate: () => <T, A>(this: T, args: import("@prisma/client/runtime/library").Exact<A, import("@prisma/client/runtime/library").Args_3<T, "aggregate"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T, A, "aggregate">>;
            count: () => <T_1, A_1>(this: T_1, args?: import("@prisma/client/runtime/library").Exact<A_1, import("@prisma/client/runtime/library").Args_3<T_1, "count"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_1, A_1, "count">>;
            findFirst: () => <T_2, A_2>(this: T_2, args?: import("@prisma/client/runtime/library").Exact<A_2, import("@prisma/client/runtime/library").Args_3<T_2, "findFirst"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_2, A_2, "findFirst"> | null>;
            findFirstOrThrow: () => <T_3, A_3>(this: T_3, args?: import("@prisma/client/runtime/library").Exact<A_3, import("@prisma/client/runtime/library").Args_3<T_3, "findFirstOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_3, A_3, "findFirstOrThrow">>;
            findMany: () => <T_4, A_4>(this: T_4, args?: import("@prisma/client/runtime/library").Exact<A_4, import("@prisma/client/runtime/library").Args_3<T_4, "findMany"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_4, A_4, "findMany">>;
            findUnique: () => <T_5, A_5>(this: T_5, args: import("@prisma/client/runtime/library").Exact<A_5, import("@prisma/client/runtime/library").Args_3<T_5, "findUnique"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_5, A_5, "findUnique"> | null>;
            findUniqueOrThrow: () => <T_6, A_6>(this: T_6, args: import("@prisma/client/runtime/library").Exact<A_6, import("@prisma/client/runtime/library").Args_3<T_6, "findUniqueOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_6, A_6, "findUniqueOrThrow">>;
            groupBy: () => <T_7, A_7>(this: T_7, args: import("@prisma/client/runtime/library").Exact<A_7, import("@prisma/client/runtime/library").Args_3<T_7, "groupBy"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_7, A_7, "groupBy">>;
        };
        recipeIngredient: {
            aggregate: () => <T, A>(this: T, args: import("@prisma/client/runtime/library").Exact<A, import("@prisma/client/runtime/library").Args_3<T, "aggregate"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T, A, "aggregate">>;
            count: () => <T_1, A_1>(this: T_1, args?: import("@prisma/client/runtime/library").Exact<A_1, import("@prisma/client/runtime/library").Args_3<T_1, "count"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_1, A_1, "count">>;
            findFirst: () => <T_2, A_2>(this: T_2, args?: import("@prisma/client/runtime/library").Exact<A_2, import("@prisma/client/runtime/library").Args_3<T_2, "findFirst"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_2, A_2, "findFirst"> | null>;
            findFirstOrThrow: () => <T_3, A_3>(this: T_3, args?: import("@prisma/client/runtime/library").Exact<A_3, import("@prisma/client/runtime/library").Args_3<T_3, "findFirstOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_3, A_3, "findFirstOrThrow">>;
            findMany: () => <T_4, A_4>(this: T_4, args?: import("@prisma/client/runtime/library").Exact<A_4, import("@prisma/client/runtime/library").Args_3<T_4, "findMany"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_4, A_4, "findMany">>;
            findUnique: () => <T_5, A_5>(this: T_5, args: import("@prisma/client/runtime/library").Exact<A_5, import("@prisma/client/runtime/library").Args_3<T_5, "findUnique"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_5, A_5, "findUnique"> | null>;
            findUniqueOrThrow: () => <T_6, A_6>(this: T_6, args: import("@prisma/client/runtime/library").Exact<A_6, import("@prisma/client/runtime/library").Args_3<T_6, "findUniqueOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_6, A_6, "findUniqueOrThrow">>;
            groupBy: () => <T_7, A_7>(this: T_7, args: import("@prisma/client/runtime/library").Exact<A_7, import("@prisma/client/runtime/library").Args_3<T_7, "groupBy"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_7, A_7, "groupBy">>;
        };
        ingredient: {
            aggregate: () => <T, A>(this: T, args: import("@prisma/client/runtime/library").Exact<A, import("@prisma/client/runtime/library").Args_3<T, "aggregate"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T, A, "aggregate">>;
            count: () => <T_1, A_1>(this: T_1, args?: import("@prisma/client/runtime/library").Exact<A_1, import("@prisma/client/runtime/library").Args_3<T_1, "count"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_1, A_1, "count">>;
            findFirst: () => <T_2, A_2>(this: T_2, args?: import("@prisma/client/runtime/library").Exact<A_2, import("@prisma/client/runtime/library").Args_3<T_2, "findFirst"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_2, A_2, "findFirst"> | null>;
            findFirstOrThrow: () => <T_3, A_3>(this: T_3, args?: import("@prisma/client/runtime/library").Exact<A_3, import("@prisma/client/runtime/library").Args_3<T_3, "findFirstOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_3, A_3, "findFirstOrThrow">>;
            findMany: () => <T_4, A_4>(this: T_4, args?: import("@prisma/client/runtime/library").Exact<A_4, import("@prisma/client/runtime/library").Args_3<T_4, "findMany"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_4, A_4, "findMany">>;
            findUnique: () => <T_5, A_5>(this: T_5, args: import("@prisma/client/runtime/library").Exact<A_5, import("@prisma/client/runtime/library").Args_3<T_5, "findUnique"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_5, A_5, "findUnique"> | null>;
            findUniqueOrThrow: () => <T_6, A_6>(this: T_6, args: import("@prisma/client/runtime/library").Exact<A_6, import("@prisma/client/runtime/library").Args_3<T_6, "findUniqueOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_6, A_6, "findUniqueOrThrow">>;
            groupBy: () => <T_7, A_7>(this: T_7, args: import("@prisma/client/runtime/library").Exact<A_7, import("@prisma/client/runtime/library").Args_3<T_7, "groupBy"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_7, A_7, "groupBy">>;
        };
        recipe: {
            aggregate: () => <T, A>(this: T, args: import("@prisma/client/runtime/library").Exact<A, import("@prisma/client/runtime/library").Args_3<T, "aggregate"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T, A, "aggregate">>;
            count: () => <T_1, A_1>(this: T_1, args?: import("@prisma/client/runtime/library").Exact<A_1, import("@prisma/client/runtime/library").Args_3<T_1, "count"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_1, A_1, "count">>;
            findFirst: () => <T_2, A_2>(this: T_2, args?: import("@prisma/client/runtime/library").Exact<A_2, import("@prisma/client/runtime/library").Args_3<T_2, "findFirst"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_2, A_2, "findFirst"> | null>;
            findFirstOrThrow: () => <T_3, A_3>(this: T_3, args?: import("@prisma/client/runtime/library").Exact<A_3, import("@prisma/client/runtime/library").Args_3<T_3, "findFirstOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_3, A_3, "findFirstOrThrow">>;
            findMany: () => <T_4, A_4>(this: T_4, args?: import("@prisma/client/runtime/library").Exact<A_4, import("@prisma/client/runtime/library").Args_3<T_4, "findMany"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_4, A_4, "findMany">>;
            findUnique: () => <T_5, A_5>(this: T_5, args: import("@prisma/client/runtime/library").Exact<A_5, import("@prisma/client/runtime/library").Args_3<T_5, "findUnique"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_5, A_5, "findUnique"> | null>;
            findUniqueOrThrow: () => <T_6, A_6>(this: T_6, args: import("@prisma/client/runtime/library").Exact<A_6, import("@prisma/client/runtime/library").Args_3<T_6, "findUniqueOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_6, A_6, "findUniqueOrThrow">>;
            groupBy: () => <T_7, A_7>(this: T_7, args: import("@prisma/client/runtime/library").Exact<A_7, import("@prisma/client/runtime/library").Args_3<T_7, "groupBy"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_7, A_7, "groupBy">>;
        };
        nutritionalValue: {
            aggregate: () => <T, A>(this: T, args: import("@prisma/client/runtime/library").Exact<A, import("@prisma/client/runtime/library").Args_3<T, "aggregate"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T, A, "aggregate">>;
            count: () => <T_1, A_1>(this: T_1, args?: import("@prisma/client/runtime/library").Exact<A_1, import("@prisma/client/runtime/library").Args_3<T_1, "count"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_1, A_1, "count">>;
            findFirst: () => <T_2, A_2>(this: T_2, args?: import("@prisma/client/runtime/library").Exact<A_2, import("@prisma/client/runtime/library").Args_3<T_2, "findFirst"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_2, A_2, "findFirst"> | null>;
            findFirstOrThrow: () => <T_3, A_3>(this: T_3, args?: import("@prisma/client/runtime/library").Exact<A_3, import("@prisma/client/runtime/library").Args_3<T_3, "findFirstOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_3, A_3, "findFirstOrThrow">>;
            findMany: () => <T_4, A_4>(this: T_4, args?: import("@prisma/client/runtime/library").Exact<A_4, import("@prisma/client/runtime/library").Args_3<T_4, "findMany"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_4, A_4, "findMany">>;
            findUnique: () => <T_5, A_5>(this: T_5, args: import("@prisma/client/runtime/library").Exact<A_5, import("@prisma/client/runtime/library").Args_3<T_5, "findUnique"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_5, A_5, "findUnique"> | null>;
            findUniqueOrThrow: () => <T_6, A_6>(this: T_6, args: import("@prisma/client/runtime/library").Exact<A_6, import("@prisma/client/runtime/library").Args_3<T_6, "findUniqueOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_6, A_6, "findUniqueOrThrow">>;
            groupBy: () => <T_7, A_7>(this: T_7, args: import("@prisma/client/runtime/library").Exact<A_7, import("@prisma/client/runtime/library").Args_3<T_7, "groupBy"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_7, A_7, "groupBy">>;
        };
        cuisine: {
            aggregate: () => <T, A>(this: T, args: import("@prisma/client/runtime/library").Exact<A, import("@prisma/client/runtime/library").Args_3<T, "aggregate"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T, A, "aggregate">>;
            count: () => <T_1, A_1>(this: T_1, args?: import("@prisma/client/runtime/library").Exact<A_1, import("@prisma/client/runtime/library").Args_3<T_1, "count"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_1, A_1, "count">>;
            findFirst: () => <T_2, A_2>(this: T_2, args?: import("@prisma/client/runtime/library").Exact<A_2, import("@prisma/client/runtime/library").Args_3<T_2, "findFirst"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_2, A_2, "findFirst"> | null>;
            findFirstOrThrow: () => <T_3, A_3>(this: T_3, args?: import("@prisma/client/runtime/library").Exact<A_3, import("@prisma/client/runtime/library").Args_3<T_3, "findFirstOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_3, A_3, "findFirstOrThrow">>;
            findMany: () => <T_4, A_4>(this: T_4, args?: import("@prisma/client/runtime/library").Exact<A_4, import("@prisma/client/runtime/library").Args_3<T_4, "findMany"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_4, A_4, "findMany">>;
            findUnique: () => <T_5, A_5>(this: T_5, args: import("@prisma/client/runtime/library").Exact<A_5, import("@prisma/client/runtime/library").Args_3<T_5, "findUnique"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_5, A_5, "findUnique"> | null>;
            findUniqueOrThrow: () => <T_6, A_6>(this: T_6, args: import("@prisma/client/runtime/library").Exact<A_6, import("@prisma/client/runtime/library").Args_3<T_6, "findUniqueOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_6, A_6, "findUniqueOrThrow">>;
            groupBy: () => <T_7, A_7>(this: T_7, args: import("@prisma/client/runtime/library").Exact<A_7, import("@prisma/client/runtime/library").Args_3<T_7, "groupBy"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_7, A_7, "groupBy">>;
        };
        todo: {
            aggregate: () => <T, A>(this: T, args: import("@prisma/client/runtime/library").Exact<A, import("@prisma/client/runtime/library").Args_3<T, "aggregate"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T, A, "aggregate">>;
            count: () => <T_1, A_1>(this: T_1, args?: import("@prisma/client/runtime/library").Exact<A_1, import("@prisma/client/runtime/library").Args_3<T_1, "count"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_1, A_1, "count">>;
            findFirst: () => <T_2, A_2>(this: T_2, args?: import("@prisma/client/runtime/library").Exact<A_2, import("@prisma/client/runtime/library").Args_3<T_2, "findFirst"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_2, A_2, "findFirst"> | null>;
            findFirstOrThrow: () => <T_3, A_3>(this: T_3, args?: import("@prisma/client/runtime/library").Exact<A_3, import("@prisma/client/runtime/library").Args_3<T_3, "findFirstOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_3, A_3, "findFirstOrThrow">>;
            findMany: () => <T_4, A_4>(this: T_4, args?: import("@prisma/client/runtime/library").Exact<A_4, import("@prisma/client/runtime/library").Args_3<T_4, "findMany"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_4, A_4, "findMany">>;
            findUnique: () => <T_5, A_5>(this: T_5, args: import("@prisma/client/runtime/library").Exact<A_5, import("@prisma/client/runtime/library").Args_3<T_5, "findUnique"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_5, A_5, "findUnique"> | null>;
            findUniqueOrThrow: () => <T_6, A_6>(this: T_6, args: import("@prisma/client/runtime/library").Exact<A_6, import("@prisma/client/runtime/library").Args_3<T_6, "findUniqueOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_6, A_6, "findUniqueOrThrow">>;
            groupBy: () => <T_7, A_7>(this: T_7, args: import("@prisma/client/runtime/library").Exact<A_7, import("@prisma/client/runtime/library").Args_3<T_7, "groupBy"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_7, A_7, "groupBy">>;
        };
        blog: {
            aggregate: () => <T, A>(this: T, args: import("@prisma/client/runtime/library").Exact<A, import("@prisma/client/runtime/library").Args_3<T, "aggregate"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T, A, "aggregate">>;
            count: () => <T_1, A_1>(this: T_1, args?: import("@prisma/client/runtime/library").Exact<A_1, import("@prisma/client/runtime/library").Args_3<T_1, "count"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_1, A_1, "count">>;
            findFirst: () => <T_2, A_2>(this: T_2, args?: import("@prisma/client/runtime/library").Exact<A_2, import("@prisma/client/runtime/library").Args_3<T_2, "findFirst"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_2, A_2, "findFirst"> | null>;
            findFirstOrThrow: () => <T_3, A_3>(this: T_3, args?: import("@prisma/client/runtime/library").Exact<A_3, import("@prisma/client/runtime/library").Args_3<T_3, "findFirstOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_3, A_3, "findFirstOrThrow">>;
            findMany: () => <T_4, A_4>(this: T_4, args?: import("@prisma/client/runtime/library").Exact<A_4, import("@prisma/client/runtime/library").Args_3<T_4, "findMany"> & import("@prisma/extension-accelerate").PrismaCacheStrategy> | undefined) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_4, A_4, "findMany">>;
            findUnique: () => <T_5, A_5>(this: T_5, args: import("@prisma/client/runtime/library").Exact<A_5, import("@prisma/client/runtime/library").Args_3<T_5, "findUnique"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_5, A_5, "findUnique"> | null>;
            findUniqueOrThrow: () => <T_6, A_6>(this: T_6, args: import("@prisma/client/runtime/library").Exact<A_6, import("@prisma/client/runtime/library").Args_3<T_6, "findUniqueOrThrow"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_6, A_6, "findUniqueOrThrow">>;
            groupBy: () => <T_7, A_7>(this: T_7, args: import("@prisma/client/runtime/library").Exact<A_7, import("@prisma/client/runtime/library").Args_3<T_7, "groupBy"> & import("@prisma/extension-accelerate").PrismaCacheStrategy>) => import("@prisma/extension-accelerate").AcceleratePromise<import("@prisma/client/runtime/library").Result_2<T_7, A_7, "groupBy">>;
        };
    };
    query: {};
    client: {};
}, {}>;
export declare const cacheStrategy: {
    swr: number;
    ttl: number;
};
